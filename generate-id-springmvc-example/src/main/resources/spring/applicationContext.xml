<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.wangxin" />

	<!-- 引用properties -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:config/datasource.properties</value>
				<value>classpath*:config/zookeeper.properties</value>
				<value>classpath*:config/redis.properties</value>
				<value>classpath*:config/constants.properties</value>
			</list>
		</property>
	</bean>

	<!-- Jedis对象池 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<!-- Jedis连接工厂 -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="poolConfig" ref="jedisPoolConfig" />
		<property name="hostName" value="${redis.hostName}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="timeout" value="${redis.timeout}" />
		<property name="usePool" value="${redis.usePool}" />
	</bean>

	<!-- Redis模板 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory">
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>


	<!-- 重连策略 -->
	<bean id="retryPolicy" class="org.apache.curator.retry.ExponentialBackoffRetry">
		<!-- 间隔时间基数 -->
		<constructor-arg index="0" value="1000" />
		<!-- 重连策略 -->
		<constructor-arg index="1" value="3" />
	</bean>

	<bean id="curatorFramework" class="org.apache.curator.framework.CuratorFrameworkFactory" factory-method="newClient" init-method="start">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<!-- sessionTimeoutMs会话超时时间，单位为毫秒。默认是60000ms -->
		<constructor-arg index="1" value="5000" />
		<!-- connectionTimeoutMs连接创建超时时间，单位毫秒，默认15000ms -->
		<constructor-arg index="2" value="3000" />
		<constructor-arg index="3" ref="retryPolicy" />
	</bean>

</beans>